name: alpine building

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'
env:
  TEST_COMPLIE: yunnysunny/alinode-compiler:alpine-latest
  TEST_RUNTIME: yunnysunny/alinode-runtime:alpine-latest
  ALINODE_VERSION: 7.6.0
  OS_NAME: alpine

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta for core
        id: meta-core
        uses: docker/metadata-action@v4
        with:
          images: |
            yunnysunny/alinode-core
          tags: |
            type=ref,event=branch,prefix=alpine-
            type=ref,event=pr,prefix=alpine-
            type=semver,pattern={{version}},prefix=alpine-
            type=semver,pattern={{major}}.{{minor}},prefix=alpine-
      - name: Docker meta for compiler
        id: meta-compiler
        uses: docker/metadata-action@v4
        with:
          images: |
            yunnysunny/alinode-compiler
          tags: |
            type=ref,event=branch,prefix=alpine-
            type=ref,event=pr,prefix=alpine-
            type=semver,pattern={{version}},prefix=alpine-
            type=semver,pattern={{major}}.{{minor}},prefix=alpine-
      - name: Docker meta for runtime
        id: meta-runtime
        uses: docker/metadata-action@v4
        with:
          images: |
            yunnysunny/alinode-runtime
          tags: |
            type=ref,event=branch,prefix=alpine-
            type=ref,event=pr,prefix=alpine-
            type=semver,pattern={{version}},prefix=alpine-
            type=semver,pattern={{major}}.{{minor}},prefix=alpine-
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build compiler
        uses: docker/build-push-action@v3
        with:
          context: core
          push: false
          tags: ${{ env.TEST_COMPLIE }}
          file: alpine.dockerfile
          target: compiler
          cache-from: type=registry,ref=yunnysunny/alinode-compiler:alpine-buildcache
          cache-to: type=registry,ref=yunnysunny/alinode-compiler:alpine-buildcache,mode=max
          build-args: |
            ALINODE_VERSION=${{ env.ALINODE_VERSION }}
          load: true
      - name: Build runtime
        uses: docker/build-push-action@v3
        with:
          context: runtime
          build-args: |
            ALINODE_VERSION=${{ env.ALINODE_VERSION }}
          push: false
          target: runtime
          cache-from: type=registry,ref=yunnysunny/alinode-runtime:alpine-buildcache
          cache-to: type=registry,ref=yunnysunny/alinode-runtime:alpine-buildcache,mode=max
          tags: ${{ env.TEST_RUNTIME }}
          file: alpine.dockerfile
          load: true
      - name: Test hello
        run: |
          make test-hello
      - name: Build and push core
        uses: docker/build-push-action@v3
        with:
          context: core
          platforms: linux/amd64,linux/arm64
          file: alpine.dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-core.outputs.tags }}
          labels: ${{ steps.meta-core.outputs.labels }}
          target: core
          cache-from: type=registry,ref=yunnysunny/alinode-core:alpine-buildcache
          cache-to: type=registry,ref=yunnysunny/alinode-core:alpine-buildcache,mode=max
          build-args: |
            ALINODE_VERSION=${{ env.ALINODE_VERSION }}
      - name: Build and push compiler
        uses: docker/build-push-action@v3
        with:
          context: core
          platforms: linux/amd64,linux/arm64
          file: alpine.dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-compiler.outputs.tags }}
          labels: ${{ steps.meta-compiler.outputs.labels }}
          target: compiler
          cache-from: type=registry,ref=yunnysunny/alinode-compiler:alpine-buildcache
          cache-to: type=registry,ref=yunnysunny/alinode-compiler:alpine-buildcache,mode=max
          build-args: |
            ALINODE_VERSION=${{ env.ALINODE_VERSION }}
      - name: Build and push runtime
        uses: docker/build-push-action@v3
        with:
          context: runtime
          platforms: linux/amd64,linux/arm64
          file: alpine.dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-runtime.outputs.tags }}
          labels: ${{ steps.meta-runtime.outputs.labels }}
          target: runtime
          cache-from: type=registry,ref=yunnysunny/alinode-runtime:alpine-buildcache
          cache-to: type=registry,ref=yunnysunny/alinode-runtime:alpine-buildcache,mode=max
          build-args: |
            ALINODE_VERSION=${{ env.ALINODE_VERSION }}
      